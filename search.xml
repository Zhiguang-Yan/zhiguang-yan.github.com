<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>swiper</title>
      <link href="/2019/06/06/swiper/"/>
      <url>/2019/06/06/swiper/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-awesome-swiper的一个坑"><a href="#vue-awesome-swiper的一个坑" class="headerlink" title="vue-awesome-swiper的一个坑"></a>vue-awesome-swiper的一个坑</h1><p><strong>vue项目的package.json中显示的”vue-awesome-swiper”: “^2.5.4”，用npm install自动安装依赖时装的版本为”version”: “2.6.7”2.5.4与2.6.7都是基于swiper3的，从官网上swiper3的教程来看并不需要单独引入样式文件，而2.6.7版本需要单独引入swiper/dist/css目录下的swiper.css样式文件（类似于swiper4）。并且2.6.7版本swiper位于node_modules/vue-awesome-swiper/node_modules下；2.5.4不需要单独引入样式文件，并且swiper直接位于node_modules文件夹下</strong></p><h2 id="基本的使用方法"><a href="#基本的使用方法" class="headerlink" title="基本的使用方法"></a>基本的使用方法</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-awesome-swiper --save</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul><li><p>CDN</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"path/to/swiper/dist/css/swiper.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"path/to/swiper.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"path/to/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"path/to/dist/vue-awesome-swiper.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript">Vue.use(<span class="built_in">window</span>.VueAwesomeSwiper)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>NPM<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm(cnpm) install vue-awesome-swiper --save</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><strong>在main.js里面引入如下</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueAwesomeSwiper <span class="keyword">from</span> <span class="string">'vue-awesome-swiper'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'swiper/dist/css/swiper.css'</span></span><br><span class="line">Vue.use(VueAwesomeSwiper,  &#123;  global  &#125; )<span class="comment">//全局挂载vue-awesome-swiper</span></span><br></pre></td></tr></table></figure><p><strong>在对应的组件中</strong><br> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiper :options=<span class="string">"swiperOption"</span>&gt;</span><br><span class="line">    &lt;swiper-slide&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/"</span>&gt;</span><span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span></span><br><span class="line">      ...</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-scrollbar"</span> slot=<span class="string">"scrollbar"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> <span class="comment">//标页码</span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-scrollbar"</span> slot=<span class="string">"scrollbar"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> <span class="comment">//滚动条</span></span><br><span class="line">&lt;<span class="regexp">/swiper&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!--以下看需要添加--&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="swiper-button-next"&gt;&lt;/</span>div&gt; <span class="comment">//下一项</span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-button-prev"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span> <span class="comment">//**上一项**</span></span><br><span class="line"> <span class="keyword">import</span> <span class="string">'swiper/dist/css/swiper.css'</span><span class="comment">//如果全局未引入组件中必须加入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">import</span> &#123; swiper, swiperSlide &#125; <span class="keyword">from</span> <span class="string">'vue-awesome-swiper'</span></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">         swiperOption: &#123;<span class="comment">//swiper3</span></span><br><span class="line">         autoplay: <span class="number">3000</span>,</span><br><span class="line">         speed: <span class="number">1000</span>,</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    swiper,</span><br><span class="line">    swiperSlide</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="api配置-swiper4"><a href="#api配置-swiper4" class="headerlink" title="api配置(swiper4)"></a>api配置(swiper4)</h2><table><thead><tr><th>参数</th><th>默认值</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>autoplay</td><td>Object</td><td>autoplay</td><td>自动切换</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p><strong>想了解更多api请移步<a href="https://www.swiper.com.cn/api/pagination/299.html" target="_blank" rel="noopener">swiper</a></strong></p><hr><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> swiper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swiper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkText</title>
      <link href="/2019/06/06/%E4%BB%8A%E5%A4%A9%E5%AE%89%E5%88%A9%E4%B8%80%E6%AC%BE%E5%BC%80%E6%BA%90%E3%80%81%E8%B7%A8%E5%B9%B3%E5%8F%B0markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
      <url>/2019/06/06/%E4%BB%8A%E5%A4%A9%E5%AE%89%E5%88%A9%E4%B8%80%E6%AC%BE%E5%BC%80%E6%BA%90%E3%80%81%E8%B7%A8%E5%B9%B3%E5%8F%B0markdown%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="今天安利一款开源、跨平台markdown编辑器"><a href="#今天安利一款开源、跨平台markdown编辑器" class="headerlink" title="今天安利一款开源、跨平台markdown编辑器"></a>今天安利一款开源、跨平台markdown编辑器</h1><ul><li><p>Mark Text 所输及所见，摒弃了众多 markdown 编辑器左边写作右边预览的写作方式，巧妙的将编辑和预览融为一体</p></li><li><p><a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fsnabbdom%2Fsnabbdom" target="_blank" rel="noopener">snabbdom</a>  作为 Mark Text 的渲染引擎，保证了极速渲染编辑页面，带来流程的书写体验；</p></li><li><p>支持  <a href="https://link.jianshu.com/?t=https%3A%2F%2Fspec.commonmark.org%2F0.28%2F" target="_blank" rel="noopener">CommonMark Spec</a>  和  <a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.github.com%2Fgfm%2F" target="_blank" rel="noopener">GitHub Flavored Markdown Spec</a>  语法格式，生成的 Markdown 可以复制到任何支持 markdown 格式的社区、网站；</p></li><li><p>段落及行内样式快捷键提升您的编辑效率；</p></li><li><p>输出 HTML 和 PDF 格式文件，方便在浏览器中预览；</p></li><li><p>黑、白两款主题，自由切换；</p></li><li><p>多种编辑模式：<strong>Source Code mode</strong>、<strong>Typewriter mode</strong>、<strong>Focus mode</strong>。</p></li></ul><h1 id="可以斗图的-Markdown-编辑器-这点大赞"><a href="#可以斗图的-Markdown-编辑器-这点大赞" class="headerlink" title="可以斗图的 Markdown 编辑器(这点大赞)"></a>可以斗图的 Markdown 编辑器(这点大赞)</h1><p>Mark Text 内置斗图功能，省掉了寻找「斗图」的烦恼，通过快捷键 Cmd+/ 直接打开斗图搜索面板，你需要的有趣图片就在里面。斗图功能默认是关闭的，你需要从user preference 菜单中，打开 preference.md, 然后设置 aidou 为 true。保存然后重启编辑器就可以使用了。</p><blockquote><p><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g3x0c7xenjj3073073ace.jpg" alt="5cff0965d823d91141"></p></blockquote><p><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g3x0bzi8wsj311y0lcn5x.jpg" alt="图片"></p><h2 id="还有一点就是界面非常非常简洁漂亮"><a href="#还有一点就是界面非常非常简洁漂亮" class="headerlink" title="还有一点就是界面非常非常简洁漂亮"></a>还有一点就是界面非常非常简洁漂亮</h2><p><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g3x0b7cngnj311y0lcn1y.jpg" alt="主题一"></p><p><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g3x0bq007cj311y0lc0xo.jpg" alt="主题二"></p><p>感兴趣的小伙伴可以去看看</p><p><a href="https://marktext.app/" target="_blank" rel="noopener">marktext</a></p><p><a href="https://github.com/marktext/marktext" target="_blank" rel="noopener">github</a></p><hr><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MarkText </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkText </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生js实现瀑布流效果</title>
      <link href="/2019/06/04/%E7%80%91%E5%B8%83%E6%B5%81%E5%8E%9F%E7%94%9Fjs/"/>
      <url>/2019/06/04/%E7%80%91%E5%B8%83%E6%B5%81%E5%8E%9F%E7%94%9Fjs/</url>
      
        <content type="html"><![CDATA[<p><strong>&emsp;&emsp;最近在整理自己以前写的一些js特效，接触到了几个常用的页面特效，其中觉得用原生js实现瀑布流的案例十分有趣,也很简单，于是与大家分享一下 </strong></p><h1 id="瀑布流"><a href="#瀑布流" class="headerlink" title="瀑布流"></a>瀑布流</h1><blockquote><p>&emsp;&emsp;瀑布流，又称瀑布流式布局。是比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。</p></blockquote><p> <img src="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3oyved91bj311y0lc7wh.jpg" alt="瀑布流"> </p><h1 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h1><h2 id="1-获取到-itemBox-宽度"><a href="#1-获取到-itemBox-宽度" class="headerlink" title="1 获取到.itemBox 宽度"></a>1 获取到.itemBox 宽度</h2> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> itemBox = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'itemBox'</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> items = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'item'</span>);</span><br><span class="line"><span class="keyword">var</span> itemBoxW = itemBox.offsetWidth;</span><br></pre></td></tr></table></figure><h2 id="2-获取到-item-宽度"><a href="#2-获取到-item-宽度" class="headerlink" title="2 获取到.item 宽度"></a>2 获取到.item 宽度</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> itemW = items[<span class="number">0</span>].offsetWidth;</span><br></pre></td></tr></table></figure><h2 id="3-求出列数"><a href="#3-求出列数" class="headerlink" title="3 求出列数"></a>3 求出列数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> column = <span class="built_in">parseInt</span>(itemBoxW / itemW);</span><br></pre></td></tr></table></figure><h2 id="4-求出间距"><a href="#4-求出间距" class="headerlink" title="4 求出间距"></a>4 求出间距</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> distence = (itemBoxW - itemW * column) / (column - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="5-实现瀑布流布局的方法"><a href="#5-实现瀑布流布局的方法" class="headerlink" title="5 实现瀑布流布局的方法"></a>5 实现瀑布流布局的方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waterFull</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (i &lt; column) &#123;</span><br><span class="line">                   items[i].style.left = (itemW + distence) * i + <span class="string">'px'</span>;</span><br><span class="line">                   arr[i] = items[i].offsetHeight;</span><br><span class="line">                   <span class="comment">// console.log(arr);</span></span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">var</span> minV = getMin(arr).minV;</span><br><span class="line">                   <span class="keyword">var</span> minI = getMin(arr).minI;</span><br><span class="line">                   items[i].style.left = (itemW + distence) * minI + <span class="string">'px'</span>;</span><br><span class="line">                   items[i].style.top = minV + distence + <span class="string">'px'</span>;</span><br><span class="line">                   arr[minI] = minV + distence + items[i].offsetHeight;</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><ul><li><p>获取数组的最小值以及索引</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMin</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">           obj.minV = arr[<span class="number">0</span>];</span><br><span class="line">           obj.minI = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (obj.minV &gt; arr[i]) &#123;</span><br><span class="line">                   obj.minV = arr[i];</span><br><span class="line">                   obj.minI = i;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> obj;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="6-滚动页面时-加载数据"><a href="#6-滚动页面时-加载数据" class="headerlink" title="6 滚动页面时 加载数据"></a>6 滚动页面时 加载数据</h2> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset + <span class="built_in">window</span>.innerHeight &gt; getMin(arr).minV) &#123;</span><br><span class="line">               <span class="keyword">var</span> json = [</span><br><span class="line">                   &#123; <span class="string">"src"</span>: <span class="string">"../"</span> &#125;</span><br><span class="line">               ];</span><br><span class="line">               <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; json.length; i++) &#123;</span><br><span class="line">                   <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">                   div.className = <span class="string">'item'</span>;</span><br><span class="line">                   <span class="keyword">var</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</span><br><span class="line">                   img.src = json[i].src;</span><br><span class="line">                   div.appendChild(img);</span><br><span class="line">                   itemBox.appendChild(div);</span><br><span class="line">               &#125;</span><br><span class="line">               waterFull();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1></li></ul><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../ alt="</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.itemBox</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1050px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">4px</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></code></pre><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> itemBox = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'itemBox'</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> items = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'item'</span>);</span><br><span class="line">        <span class="keyword">var</span> itemBoxW = itemBox.offsetWidth;</span><br><span class="line">        <span class="keyword">var</span> itemW = items[<span class="number">0</span>].offsetWidth;</span><br><span class="line">        <span class="keyword">var</span> column = <span class="built_in">parseInt</span>(itemBoxW / itemW);</span><br><span class="line">        <span class="keyword">var</span> distence = (itemBoxW - itemW * column) / (column - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> arr = [];</span><br><span class="line">        waterFull();</span><br><span class="line">        <span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset + <span class="built_in">window</span>.innerHeight &gt; getMin(arr).minV) &#123;</span><br><span class="line">                <span class="keyword">var</span> json = [</span><br><span class="line">                    &#123; <span class="string">"src"</span>: <span class="string">"../ &#125;</span></span><br><span class="line"><span class="string">                ];</span></span><br><span class="line"><span class="string">                for (var i = 0; i &lt; json.length; i++) &#123;</span></span><br><span class="line"><span class="string">                    var div = document.createElement('div');</span></span><br><span class="line"><span class="string">                    div.className = 'item';</span></span><br><span class="line"><span class="string">                    var img = document.createElement('img');</span></span><br><span class="line"><span class="string">                    img.src = json[i].src;</span></span><br><span class="line"><span class="string">                    div.appendChild(img);</span></span><br><span class="line"><span class="string">                    itemBox.appendChild(div);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                waterFull();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        // 瀑布流方法</span></span><br><span class="line"><span class="string">        function waterFull() &#123;</span></span><br><span class="line"><span class="string">            for (var i = 0; i &lt; items.length; i++) &#123;</span></span><br><span class="line"><span class="string">                if (i &lt; column) &#123;</span></span><br><span class="line"><span class="string">                    items[i].style.left = (itemW + distence) * i + 'px';</span></span><br><span class="line"><span class="string">                    arr[i] = items[i].offsetHeight;</span></span><br><span class="line"><span class="string">                    // console.log(arr);</span></span><br><span class="line"><span class="string">                &#125; else &#123;</span></span><br><span class="line"><span class="string">                    var minV = getMin(arr).minV;</span></span><br><span class="line"><span class="string">                    var minI = getMin(arr).minI;</span></span><br><span class="line"><span class="string">                    items[i].style.left = (itemW + distence) * minI + 'px';</span></span><br><span class="line"><span class="string">                    items[i].style.top = minV + distence + 'px';</span></span><br><span class="line"><span class="string">                    arr[minI] = minV + distence + items[i].offsetHeight;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        // 获取数组的最小值以及索引</span></span><br><span class="line"><span class="string">        function getMin(arr) &#123;</span></span><br><span class="line"><span class="string">            var obj = &#123;&#125;;</span></span><br><span class="line"><span class="string">            obj.minV = arr[0];</span></span><br><span class="line"><span class="string">            obj.minI = 0;</span></span><br><span class="line"><span class="string">            for (var i = 1; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="string">                if (obj.minV &gt; arr[i]) &#123;</span></span><br><span class="line"><span class="string">                    obj.minV = arr[i];</span></span><br><span class="line"><span class="string">                    obj.minI = i;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            return obj;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></code></pre><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><h2 id><a href="#" class="headerlink" title></a><img src="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3p09t8otvg30nn0dcb29.jpg" alt="瀑布流效果图"></h2><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js瀑布流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目中关闭ESLint</title>
      <link href="/2019/06/04/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%85%B3%E9%97%ADESLint/"/>
      <url>/2019/06/04/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%85%B3%E9%97%ADESLint/</url>
      
        <content type="html"><![CDATA[<p><strong>ESLint是一个用来识别 ECMAScript 并且按照规则给出报告的代码检测工具，使用它可以避免低级错误和统一代码的风格。<br>但是有时候会被ESLint的报错阻止程序的运行，这时候我们就想关闭这个ESLint了。<br>在vue项目中关闭ESLint方法：找到config文件夹—&gt;index.js—-&gt;module</strong></p><p><strong>把useEslint: true,改为false就ok了</strong></p><p><img src="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3owvjn5lrj311y0lctd4.jpg" alt="关闭ESLint"></p><hr><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关闭烦死人的ESLint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目实现按需加载的3种方式</title>
      <link href="/2019/06/04/vue%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E7%BB%84%E4%BB%B6/"/>
      <url>/2019/06/04/vue%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-vue异步组件技术"><a href="#1-vue异步组件技术" class="headerlink" title="1.vue异步组件技术"></a>1.vue异步组件技术</h1><p><strong>vue-router配置路由，使用vue的<a href="组件 — Vue.js">异步组件</a>技术，可以实现按需加载。 但是，这种情况下一个组件生成一个js文件。 举例如下：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/promisedemo'</span>,</span><br><span class="line">  name: <span class="string">'PromiseDemo'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'../components/PromiseDemo'</span>], resolve)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><h1 id="2-es提案的import"><a href="#2-es提案的import" class="headerlink" title="2.es提案的import()"></a>2.es提案的import()</h1><p><strong>推荐使用这种方式(需要webpack &gt; 2.4)<br>webpack官方文档：webpack中使用import() （代码分离)vue官方文档：<a href="懒加载 · vue-router">路由懒加载(使用import())</a><br>vue-router配置路由，代码如下: </strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下面2行代码，没有指定webpackChunkName，每个组件打包成一个js文件。</span></span><br><span class="line"><span class="keyword">const</span> ImportFuncDemo1 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../components/ImportFuncDemo1'</span>)</span><br><span class="line"><span class="keyword">const</span> ImportFuncDemo2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../components/ImportFuncDemo2'</span>)</span><br><span class="line"><span class="comment">// 下面2行代码，指定了相同的webpackChunkName，会合并打包成一个js文件。</span></span><br><span class="line"><span class="comment">// const ImportFuncDemo = () =&gt; import(/* webpackChunkName: 'ImportFuncDemo' */ '../components/ImportFuncDemo')</span></span><br><span class="line"><span class="comment">// const ImportFuncDemo2 = () =&gt; import(/* webpackChunkName: 'ImportFuncDemo' */ '../components/ImportFuncDemo2')</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">   routes: [</span><br><span class="line">       &#123;</span><br><span class="line">           path: <span class="string">'/importfuncdemo1'</span>,</span><br><span class="line">           name: <span class="string">'ImportFuncDemo1'</span>,</span><br><span class="line">           component: ImportFuncDemo1</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           path: <span class="string">'/importfuncdemo2'</span>,</span><br><span class="line">           name: <span class="string">'ImportFuncDemo2'</span>,</span><br><span class="line">           component: ImportFuncDemo2</span><br><span class="line">       &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="3-webpack提供的require-ensure"><a href="#3-webpack提供的require-ensure" class="headerlink" title="3. webpack提供的require.ensure()"></a>3. webpack提供的require.ensure()</h1><p><strong>vue-router配置路由，使用webpack的<a href="Module API - Methods">require.ensure</a>技术，也可以实现按需加载。 这种情况下，多个路由指定相同的chunkName，会合并打包成一个js文件。 举例如下：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">         path: <span class="string">'/promisedemo'</span>,</span><br><span class="line">         name: <span class="string">'PromiseDemo'</span>,</span><br><span class="line">         component: <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; r(<span class="built_in">require</span>(<span class="string">'../components/PromiseDemo'</span>)), <span class="string">'demo'</span>)</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">         path: <span class="string">'/hello'</span>,</span><br><span class="line">         name: <span class="string">'Hello'</span>,</span><br><span class="line">         <span class="comment">// component: Hello</span></span><br><span class="line">         component: <span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">require</span>.ensure([], () =&gt; r(<span class="built_in">require</span>(<span class="string">'../components/Hello'</span>)), <span class="string">'demo'</span>)</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure></p><hr><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue异步加载组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo点击红心特效</title>
      <link href="/2019/05/29/%E7%88%B1%E5%BF%83%E7%89%B9%E6%95%88/"/>
      <url>/2019/05/29/%E7%88%B1%E5%BF%83%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p>给NexT主题内添加页面点击出现爱心的效果</p><h3 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h3><p><strong>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。</strong><br>代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">"function"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">"rgb("</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">")"</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><hr><h3 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h3><p>在\themes\next\layout_layout.swig文件末尾添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.clicklove %&#125;</span><br><span class="line">     &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clicklove.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>同时在主题配置文件<code>_config.yml</code>合适的位置（一般是最后一行）添加<br><code>clicklove : true</code></p><p><img src="https://cdn.sinaimg.cn.52ecy.cn/large/005BYqpgly1g3hgvz4kyxj31400u0npf.jpg" alt="风景" title="沙滩风景"></p><hr><p>Δ~~~~Δ<br> ξ •ェ• ξ<br> ξ　~　ξ<br> ξ　　 ξ<br> ξ　　　“~～~～〇<br> ξ　　　　　　 ξ<br> ξ　ξ　ξ~～~ξ　ξ<br> 　ξ_ξξ<em>ξ　ξ</em>ξξ_ξ<br> 　　ヽ(´•ω•)ノ<br> 　　　 |　 /<br> 　　　 UU”</p><blockquote><p>本文结束谢谢大家的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo红心 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
